$date
	Mon May 15 21:57:02 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$scope module a1 $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # carryIn $end
$var wire 4 $ w [3:0] $end
$var wire 4 % sum [3:0] $end
$var wire 1 & carryOut $end
$scope module f1 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 # carryIn $end
$var wire 1 ) w2 $end
$var wire 1 * w1 $end
$var wire 1 + w0 $end
$var wire 4 , sum [3:0] $end
$var wire 1 & carryOut $end
$scope module f0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 # carryIn $end
$var wire 1 + carryOut $end
$var wire 1 / sum $end
$var wire 1 0 w0 $end
$var wire 1 1 w1 $end
$var wire 1 2 w2 $end
$var wire 1 3 w3 $end
$upscope $end
$scope module f1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 + carryIn $end
$var wire 1 * carryOut $end
$var wire 1 6 sum $end
$var wire 1 7 w0 $end
$var wire 1 8 w1 $end
$var wire 1 9 w2 $end
$var wire 1 : w3 $end
$upscope $end
$scope module f2 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 * carryIn $end
$var wire 1 ) carryOut $end
$var wire 1 = sum $end
$var wire 1 > w0 $end
$var wire 1 ? w1 $end
$var wire 1 @ w2 $end
$var wire 1 A w3 $end
$upscope $end
$scope module f3 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 ) carryIn $end
$var wire 1 & carryOut $end
$var wire 1 D sum $end
$var wire 1 E w0 $end
$var wire 1 F w1 $end
$var wire 1 G w2 $end
$var wire 1 H w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0H
0G
1F
0E
0D
1C
1B
0A
0@
0?
0>
1=
0<
0;
0:
09
18
07
06
15
14
03
02
01
00
0/
0.
0-
b100 ,
0+
1*
0)
b1010 (
b1010 '
1&
b100 %
b1010 $
0#
b1010 "
b1010 !
$end
#10
1:
1H
1+
06
1*
0=
1)
0D
1&
10
12
17
08
1>
1@
1E
0F
1.
05
1<
0C
b101 $
b101 (
b0 %
b0 ,
0/
1#
#20
